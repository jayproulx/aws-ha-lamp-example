AWSTemplateFormatVersion: 2010-09-09
Description: CICD for High Availability LAMP stack
Metadata:
  CodeBuildImage: aws/codebuild/eb-nodejs-4.4.6-amazonlinux-64:2.1.3
  CodeBuildImageOverride: aws/codebuild/eb-nodejs-4.4.6-amazonlinux-64:2.1.3
Parameters:
  AppName:
    Description: Name of the application.
    MaxLength: 100
    MinLength: 1
    Type: String
  Environment:
    Description: Environment suffix for services, an empty string is assumed to be production
    ConstraintDescription: Environment must be one of 'Dev' or 'Prod'
    Default: 'Prod'
    MinLength: 3
    MaxLength: 4
    Type: String
    AllowedValues:
      - 'Dev'
      - 'Prod'
Resources:
  CodeCommitRepo:
   Type: AWS::CodeCommit::Repository
   Properties:
     RepositoryName: !Ref AWS::StackName
     RepositoryDescription: CodeCommit Repository
     Triggers:
     - Name: MasterTrigger
       CustomData: Project ID 12345
       DestinationArn: !Ref CICDNotifications
       Branches:
       - Master
       Events:
       - all
  CloudFormationTrustRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}${Environment}-CloudFormation"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
      Policies:
        - PolicyName: !Sub "${AppName}${Environment}-CloudFormationRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'sns:CreateTopic'
                  - 'sns:DeleteTopic'
                  - 'sns:ListTopics'
                  - 'sns:GetTopicAttributes'
                  - 'sns:SetTopicAttributes'
                Resource: '*'
  CICDNotifications:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Sub "${AppName}${Environment}-CodeBuildNotifications"
  DeployProjectCodePolicy:
    Type: AWS::IAM::Policy
    DependsOn: [CodeBuildRole]
    Properties:
      Roles:
        - !Ref 'CodeBuildRole'
        - !Ref 'CloudFormationTrustRole'
      PolicyName: !Sub "${AppName}${Environment}-DeployProjectCodePolicy"
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'apigateway:*'
              - 'cloudformation:List*'
              - 'cloudformation:UpdateStack'
              - 'cloudformation:Describe*'
              - 'cloudformation:DeleteChangeSet'
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:ExecuteChangeSet'
              - 'cloudformation:ValidateTemplate'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'ssm:GetParameter'
              - 's3:CreateBucket'
              - 's3:DeleteBucket'
              - 'iam:GetRole'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:GetBucketLocation'
              - 's3:ListBucket'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Resource:
              - !Sub "arn:aws:s3:::*"
          - Effect: Allow
            Action:
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
            Resource:
              - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
              - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/ssm"
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: [DeployProjectCodePolicy, CodeBuildRole]
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: !Sub "CodeBuild Project for ${AppName} ${Environment}"
      Environment:
        ComputeType: small
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Value: !Ref 'Environment'
          - Name: APP_NAME
            Value: !Ref 'AppName'
        Image: aws/codebuild/nodejs:7.0.0
        Type: container
      Name: !Sub "${AppName}${Environment}"
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: CODECOMMIT
        Location: !GetAtt [CodeCommitRepo, CloneUrlHttp]
  CodeBuildNotificationsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}${Environment}-CodeBuildNotifications"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service: "events.amazonaws.com"
      Policies:
        - PolicyName: !Sub "${AppName}${Environment}-CodeBuildNotificationPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: !Ref CICDNotifications
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}${Environment}-CodeBuild"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service: "codebuild.amazonaws.com"
  CodeBuildFailedEvent:
    Type: "AWS::Events::Rule"
    Properties:
      Description: Failed build notifications
      EventPattern: {
        "source": [
          "aws.codebuild"
        ],
        "detail-type": [
          "CodeBuild Build State Change"
        ],
        "detail": {
          "build-status": [
            "FAILED"
          ],
          "project-name": [ !Sub "${AppName}${Environment}" ]
        }
      }
      Name: !Sub "${AppName}${Environment}-CodeBuildFailedEvent"
      State: ENABLED
      Targets:
        - Arn: !Ref CICDNotifications
          Id: !Sub "${AppName}${Environment}-CodeBuildFailedEventTarget"
          InputTransformer:
            InputPathsMap:
              status: "$.detail.build-status"
              project: "$.detail.project-name"
              id: "$.detail.build-id"
              region: "$.region"
            InputTemplate: '"Build <id> for build project <project> has reached the build status of <status>. https://console.aws.amazon.com/codebuild/home?region=<region>#/builds/<project>:<id>/view/new"'